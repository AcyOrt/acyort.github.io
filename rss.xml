<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[AcyOrt]]></title><description><![CDATA[A Node.js blog tool powered by GitHub.]]></description><link>http://acyort.github.io</link><generator>RSS for Node</generator><lastBuildDate>Thu, 24 Mar 2016 13:47:31 GMT</lastBuildDate><atom:link href="http://acyort.github.io/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Thu, 24 Mar 2016 13:47:31 GMT</pubDate><item><title><![CDATA[No title]]></title><description><![CDATA[<p>AcyOrt 文章写作很简单，只需要在对应项目上写相关 issues 就可以了。如果原来就有在 issues 上写博客的就更好了。</p>
<h2 id="-">基本文章</h2>
<p>简单的 issue 书写即可</p>
<ul>
<li>标题：issue 标题</li>
<li>内容：issue 内容</li>
<li>分类：issue labels</li>
</ul>
<p>标签添加方法：只需要在 issue 正文添加一个 <code>html</code> 注释即可，例如添加 <code>tag1</code> 和 <code>tag2</code> 两个标签：
<code>&lt;!-- tags: tag1, tag2 --&gt;</code></p>
<p>添加摘要方法：同样添加一个特殊 <code>html</code> 注释
<code>&lt;!-- more --&gt;</code></p>
<p><img src="https://cloud.githubusercontent.com/assets/2193211/14018425/b5fd1438-f208-11e5-9a1f-91a2262bc127.jpg" alt="intr"></p>
<h2 id="-">新建页面</h2>
<p>新建页面也很简单，只需要在 issue 标题改称 <code>[页面地址]页面标题</code>
例如添加一个 <code>关于</code> 页面，然后路径为 <code>about</code>，标题为：<code>[about]关于</code></p>
<h2 id="-">图片相关</h2>
<p>得益于 GitHub issues 的上传图片功能，你只要复制图片，黏贴进来即可。或者拖图片进来</p>
]]></description><link>http://acyort.github.io/2016/03/143249315.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/143249315.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Thu, 24 Mar 2016 13:47:17 GMT</pubDate></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>AcyOrt 是一个基于 Node.js 的博客工具。通过 GitHub API 获取 GitHub issues 的相关内容生成静态页面，从而生成一个博客。用户只要在 issues 上写自己的博客文章，然后一个简单命令就可以发布自己的博客了。包括自定义自己域名。</p>
<h2 id="-">支持/功能</h2>
<ul>
<li>文章</li>
<li>评论</li>
<li>归档</li>
<li>Rss</li>
<li>页面 </li>
<li>标签 </li>
<li>分类</li>
<li>主题</li>
<li>菜单</li>
</ul>
<h2 id="-">安装</h2>
<p>安装 AcyOrt 之前确保已经安装 <code>Node.js</code> 以及一个 <code>GitHub</code> 账号</p>
<p>接下来只需要通过 <code>npm</code> 安装 AcyOrt</p>
<pre><code class="lang-bash">$ npm install acyort-<span class="hljs-keyword">cli</span> -<span class="hljs-keyword">g</span>
</code></pre>
<h2 id="-">创建网站</h2>
<p>安装 AcyOrt 完成后，执行下列命令，将会在指定文件夹中创建网站</p>
<pre><code class="lang-bash"><span class="hljs-variable">$ </span>acyort create &lt;folder&gt;
<span class="hljs-variable">$ </span>cd &lt;folder&gt;
<span class="hljs-variable">$ </span>npm install
</code></pre>
<p>生成网站的主要文件及文件夹主要是：<code>config.yml</code>, <code>themes</code>, <code>public</code></p>
<h3 id="config-yml">config.yml</h3>
<p>网站的配置信息</p>
<pre><code class="lang-yml"><span class="hljs-comment"># 标题，网站地址，描述，rss 链接</span>
<span class="hljs-attr">title:</span> AcyOrt
<span class="hljs-attr">url:</span> http://acyort.github.io
<span class="hljs-attr">description:</span> A Node.js blog tool powered by GitHub.
<span class="hljs-attr">rss:</span> rss.xml

<span class="hljs-comment"># 主题</span>
<span class="hljs-attr">theme:</span> ccc45

<span class="hljs-comment"># 分页</span>
<span class="hljs-attr">per_page:</span> <span class="hljs-number">2</span>

<span class="hljs-comment"># 菜单信息</span>
<span class="hljs-attr">menu:</span>
<span class="hljs-attr">  - name:</span> home
<span class="hljs-attr">    url:</span> /
<span class="hljs-attr">  - name:</span> about
<span class="hljs-attr">    url:</span> /about
<span class="hljs-attr">  - name:</span> archives
<span class="hljs-attr">    url:</span> /archives
<span class="hljs-attr">  - name:</span> tags
<span class="hljs-attr">    url:</span> /tags
<span class="hljs-attr">  - name:</span> categories
<span class="hljs-attr">    url:</span> /categories

<span class="hljs-comment"># 默认分类</span>
<span class="hljs-attr">default_category:</span> uncategorized

<span class="hljs-comment"># 评论相关用户名（多说 或者 disqus）</span>
<span class="hljs-attr">duoshuo:</span>
<span class="hljs-attr">disqus:</span> acyort

<span class="hljs-comment"># 作者过滤，避免其他用户在 issues 上写无关内容</span>
<span class="hljs-attr">authors:</span>
<span class="hljs-bullet">  -</span> LoeiFy
<span class="hljs-bullet">  -</span> author0
<span class="hljs-bullet">  -</span> author1

<span class="hljs-comment"># 网站内容来源 issues 地址</span>
<span class="hljs-comment"># 格式为：用户名/项目名</span>
<span class="hljs-attr">issue_repo:</span> AcyOrt/acyort.github.io

<span class="hljs-comment"># GitHub access token(Optional)</span>
<span class="hljs-comment"># token should be separated by whitespace</span>

<span class="hljs-comment"># token: sd46a6d65a asd8sdbn</span>
</code></pre>
<h3 id="themes">themes</h3>
<p>主题文件夹，可以自定义主题，默认主题是：<code>ccc45</code></p>
<h3 id="public">public</h3>
<p>网站静态文件生成路径</p>
<h2 id="-">生成网站</h2>
<p>通过一个简单命令即可生成网站</p>
<pre><code class="lang-bash"><span class="hljs-variable">$ </span>acyort build
</code></pre>
<p>查看 <code>public</code> 可以看到相关网站文件，你可以通过 <code>git</code> 方式提交网站到 <code>GitHub</code> 或者直接将里面文件发布到其他地方</p>
<h2 id="-">本地测试</h2>
<p>AcyOrt 提供本地测试，只需运行</p>
<pre><code class="lang-bash">$ acyort <span class="hljs-keyword">server</span>
</code></pre>
<p>这时候访问 <code>http://127.0.0.1:2222</code> 就能够看到网站</p>
]]></description><link>http://acyort.github.io/2016/03/143240507.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/143240507.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Thu, 24 Mar 2016 13:44:44 GMT</pubDate></item><item><title><![CDATA[No title]]></title><description><![CDATA[<h1 id="an-h1-header">An h1 header</h1>
<p>Paragraphs are separated by a blank line.</p>
<p>2nd paragraph. <em>Italic</em>, <strong>bold</strong>, and <code>monospace</code>. Itemized lists
look like:</p>
<ul>
<li>this one</li>
<li>that one</li>
<li>the other one</li>
</ul>
<p>Note that --- not considering the asterisk --- the actual text
content starts at 4-columns in.</p>
<blockquote>
<p>Block quotes are
written like so.</p>
<p>They can span multiple paragraphs,
if you like.</p>
</blockquote>
<p>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., &quot;it&#39;s all
in chapters 12--14&quot;). Three dots ... will be converted to an ellipsis.
Unicode is supported. ☺</p>
<h2 id="an-h2-header">An h2 header</h2>
<p>Here&#39;s a numbered list:</p>
<ol>
<li>first item</li>
<li>second item</li>
<li>third item</li>
</ol>
<p>Note again how the actual text starts at 4 columns in (4 characters
from the left side). Here&#39;s a code sample:</p>
<pre><code># <span class="hljs-keyword">Let</span> <span class="hljs-keyword">me</span> re-iterate ...
<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span> .. <span class="hljs-number">10</span> { <span class="hljs-keyword">do</span>-something(i) }
</code></pre><p>As you probably guessed, indented 4 spaces. By the way, instead of
indenting the block, you can use delimited blocks, if you like:</p>
<pre><code><span class="hljs-keyword">define</span> <span class="hljs-section">foobar</span>() {
    print <span class="hljs-string">"Welcome to flavor country!"</span>;
}
</code></pre><p>(which makes copying &amp; pasting easier). You can optionally mark the
delimited block for Pandoc to syntax highlight it:</p>
<pre><code class="lang-python">import <span class="hljs-keyword">time</span>
<span class="hljs-comment"># Quick, count to ten!</span>
<span class="hljs-keyword">for</span> i in range(<span class="hljs-number">10</span>):
    <span class="hljs-comment"># (but not *too* quick)</span>
    <span class="hljs-keyword">time</span>.<span class="hljs-keyword">sleep</span>(<span class="hljs-number">0</span>.<span class="hljs-number">5</span>)
    <span class="hljs-keyword">print</span> i
</code></pre>
<h3 id="an-h3-header">An h3 header</h3>
<p>Now a nested list:</p>
<ol>
<li><p>First, get these ingredients:</p>
<ul>
<li>carrots</li>
<li>celery</li>
<li>lentils</li>
</ul>
</li>
<li><p>Boil some water.</p>
</li>
<li><p>Dump everything in the pot and follow
this algorithm:</p>
<pre><code>find wooden spoon
uncover pot
stir
cover pot
balance wooden spoon precariously <span class="hljs-keyword">on</span> pot handle
wait <span class="hljs-number">10</span> minutes
<span class="hljs-keyword">goto</span> first <span class="hljs-keyword">step</span> (<span class="hljs-keyword">or</span> shut <span class="hljs-keyword">off</span> burner <span class="hljs-keyword">when</span> done)
</code></pre><p>Do not bump wooden spoon or it will fall.</p>
</li>
</ol>
<p>Notice again how text always lines up on 4-space indents (including
that last line which continues item 3 above).</p>
<p>Here&#39;s a link to <a href="http://foo.bar">a website</a>, to a <a href="local-doc.html">local
doc</a>, and to a <a href="#an-h2-header">section heading in the current
doc</a>. Here&#39;s a footnote [^1].</p>
<p>[^1]: Footnote text goes here.</p>
<p>Tables can look like this:</p>
<p>size  material      color</p>
<hr>
<p>9     leather       brown
10    hemp canvas   natural
11    glass         transparent</p>
<p>Table: Shoes, their sizes, and what they&#39;re made of</p>
<p>(The above is the caption for the table.) Pandoc also supports
multi-line tables:</p>
<hr>
<p>keyword   text</p>
<hr>
<p>red       Sunsets, apples, and
          other red or reddish
          things.</p>
<p>green     Leaves, grass, frogs
          and other things it&#39;s
          not easy being.</p>
<hr>
<p>A horizontal rule follows.</p>
<hr>
<p>Here&#39;s a definition list:</p>
<p>apples
  : Good for making applesauce.
oranges
  : Citrus!
tomatoes
  : There&#39;s no &quot;e&quot; in tomatoe.</p>
<p>Again, text is indented 4 spaces. (Put a blank line between each
term/definition pair to spread things out more.)</p>
<p>Here&#39;s a &quot;line block&quot;:</p>
<p>| Line one
|   Line too
| Line tree</p>
<p>and images can be specified like so:</p>
<p><img src="https://cloud.githubusercontent.com/assets/2193211/8693788/5acf79b6-2b0c-11e5-9631-c1743dc43810.PNG" alt="example image" title="An exemplary image"></p>
<p>Inline math equations go in like so: $\omega = d\phi / dt$. Display
math should get its own line and be put in in double-dollarsigns:</p>
<p>$$I = \int \rho R^{2} dV$$</p>
<p>And note that you can backslash-escape any punctuation characters
which you wish to be displayed literally, ex.: `foo`, *bar*, etc.</p>
]]></description><link>http://acyort.github.io/2016/03/138196161.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138196161.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Wed, 16 Mar 2016 14:56:28 GMT</pubDate></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>In my previous post many were telling me I was missing the point about task runners - they&#39;re for wiring up complex sets of tasks, not just running odd tasks. So I thought I&#39;d wrap up this piece with a complex set of tasks typical of a multi-hundred-line Gruntfile. For this example I want to do the following:</p>
<pre><code class="lang-js">  <span class="hljs-string">"scripts"</span>: {
    <span class="hljs-string">"clean"</span>: <span class="hljs-string">"rimraf dist/*"</span>,

    <span class="hljs-string">"prebuild"</span>: <span class="hljs-string">"npm run clean -s"</span>,
    <span class="hljs-string">"build"</span>: <span class="hljs-string">"npm run build:scripts -s &amp;&amp; npm run build:styles -s &amp;&amp; npm run build:markup -s"</span>,
    <span class="hljs-string">"build:scripts"</span>: <span class="hljs-string">"browserify -d assets/scripts/main.js -p [minifyify --compressPath . --map main.js.map --output dist/main.js.map] | hashmark -n dist/main.js -s -l 8 -m assets.json '</span>dist/{name}{hash}{ext}<span class="hljs-string">'"</span>,
    <span class="hljs-string">"build:styles"</span>: <span class="hljs-string">"stylus assets/styles/main.styl -m -o dist/ &amp;&amp; hashmark -s -l 8 -m assets.json dist/main.css '</span>dist/{name}{hash}{ext}<span class="hljs-string">'"</span>,
    <span class="hljs-string">"build:markup"</span>: <span class="hljs-string">"jade assets/markup/index.jade --obj assets.json -o dist"</span>,

    <span class="hljs-string">"test"</span>: <span class="hljs-string">"karma start --singleRun"</span>,

    <span class="hljs-string">"watch"</span>: <span class="hljs-string">"parallelshell '</span>npm run watch:test -s' <span class="hljs-string">'npm run watch:build -s'</span><span class="hljs-string">",
    "</span>watch:test<span class="hljs-string">": "</span>karma start<span class="hljs-string">",
    "</span>watch:build<span class="hljs-string">": "</span>nodemon -q -w assets/ --ext <span class="hljs-string">'.'</span> --<span class="hljs-built_in">exec</span> <span class="hljs-string">'npm run build'</span><span class="hljs-string">",

    "</span>open:<span class="hljs-built_in">prod</span><span class="hljs-string">": "</span>opener http:<span class="hljs-comment">//example.com",</span>
    <span class="hljs-string">"open:stage"</span>: <span class="hljs-string">"opener http://staging.example.internal"</span>,
    <span class="hljs-string">"open:dev"</span>: <span class="hljs-string">"opener http://localhost:9090"</span>,

    <span class="hljs-string">"deploy:prod"</span>: <span class="hljs-string">"s3-cli sync ./dist/ s3://example-com/prod-site/"</span>,
    <span class="hljs-string">"deploy:stage"</span>: <span class="hljs-string">"s3-cli sync ./dist/ s3://example-com/stage-site/"</span>,

    <span class="hljs-string">"serve"</span>: <span class="hljs-string">"http-server -p 9090 dist/"</span>,
    <span class="hljs-string">"live-reload"</span>: <span class="hljs-string">"live-reload --port 9091 dist/"</span>,

    <span class="hljs-string">"dev"</span>: <span class="hljs-string">"npm run open:dev -s &amp; parallelshell '</span>npm run live-reload -s' <span class="hljs-string">'npm run serve -s'</span> <span class="hljs-string">'npm run watch -s'</span><span class="hljs-string">"
  }</span>
</code></pre>
]]></description><link>http://acyort.github.io/2016/03/138195947.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138195947.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Thu, 03 Mar 2016 14:39:53 GMT</pubDate></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>善我王上魚、產生資西員合兒臉趣論。畫衣生這著爸毛親可時，安程幾？合學作。觀經而作建。都非子作這！法如言子你關！手師也。</p>
<p>以也座論頭室業放。要車時地變此親不老高小是統習直麼調未，行年香一？</p>
<p>就竟在，是我童示讓利分和異種百路關母信過明驗有個歷洋中前合著區亮風值新底車有正結，進快保的行戰從：弟除文辦條國備當來際年每小腳識世可的的外的廣下歌洲保輪市果底天影；全氣具些回童但倒影發狀在示，數上學大法很，如要我……月品大供這起服滿老？應學傳者國：山式排只不之然清同關；細車是！停屋常間又，資畫領生，相們制在？公別的人寫教資夠。資再我我！只臉夫藝量不路政吃息緊回力之；兒足灣電空時局我怎初安。意今一子區首者微陸現際安除發連由子由而走學體區園我車當會，經時取頭，嚴了新科同？很夫營動通打，出和導一樂，查旅他。坐是收外子發物北看蘭戰坐車身做可來。道就學務。</p>
<p>國新故。</p>
<p>工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？</p>
]]></description><link>http://acyort.github.io/2016/03/138195195.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138195195.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Thu, 03 Mar 2016 14:38:10 GMT</pubDate></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.</p>
<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>
<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>
<p>Strikethrough uses two tildes. <del>Scratch this.</del></p>
<ol>
<li>First ordered list item</li>
<li>Another item
⋅⋅* Unordered sub-list. </li>
<li>Actual numbers don&#39;t matter, just that it&#39;s a number
⋅⋅1. Ordered sub-list</li>
<li>And another item.</li>
</ol>
<p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we&#39;ll use three here to also align the raw Markdown).</p>
<p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅
⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅
⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>
<ul>
<li>Unordered list can use asterisks</li>
</ul>
<ul>
<li>Or minuses</li>
</ul>
<ul>
<li>Or pluses</li>
</ul>
<p><a href="https://www.google.com">I&#39;m an inline-style link</a></p>
<p><a href="https://www.google.com" title="Google&#39;s Homepage">I&#39;m an inline-style link with title</a></p>
<p>[I&#39;m a reference-style link][Arbitrary case-insensitive reference text]</p>
<p><a href="../blob/master/LICENSE">I&#39;m a relative reference to a repository file</a></p>
<p>Here&#39;s our logo (hover to see the title text):</p>
<p>Inline-style: 
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"></p>
<p>Reference-style: 
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2"></p>
<pre><code class="lang-javascript">var <span class="hljs-keyword">s</span> = <span class="hljs-string">"JavaScript syntax highlighting"</span><span class="hljs-comment">;</span>
alert(<span class="hljs-keyword">s</span>)<span class="hljs-comment">;</span>
</code></pre>
<pre><code class="lang-python"><span class="hljs-keyword">s</span> = <span class="hljs-string">"Python syntax highlighting"</span>
<span class="hljs-keyword">print</span> <span class="hljs-keyword">s</span>
</code></pre>
<pre><code><span class="hljs-keyword">No</span> language indicated, <span class="hljs-keyword">so</span> <span class="hljs-keyword">no</span> <span class="hljs-keyword">syntax</span> highlighting. 
But let's throw <span class="hljs-keyword">in</span> a &lt;b&gt;tag&lt;/b&gt;.
</code></pre>]]></description><link>http://acyort.github.io/2016/03/138194595.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138194595.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Wed, 16 Mar 2016 14:59:01 GMT</pubDate></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>Sass is completely compatible with all versions of CSS. We take this compatibility seriously, so that you can seamlessly use any available CSS libraries.</p>
<p>Sass boasts more features and abilities than any other CSS extension language out there. The Sass Core Team has worked endlessly to not only keep up, but stay ahead.</p>
<p>Mature
Sass has been actively supported for about 8 years by its loving Core</p>
<p>Team
Over and over again, the industry is choosing Sass as the premier CSS extension language.</p>
<p>Large Community
Sass is actively supported and developed by a consortium of several tech companies and hundreds of developers.</p>
<p>Frameworks
There are endless number of frameworks built with Sass. Compass, Bourbon, and Susy just to name a few.</p>
<p>Dreamcatcher cold-pressed American Apparel, post-ironic Carles Shoreditch craft beer Banksy PBR retro distillery before they sold out freegan asymmetrical kogi. Food truck Schlitz direct trade, deep v ethical yr sriracha mumblecore freegan. Tattooed occupy pork belly, letterpress typewriter cold-pressed viral swag farm-to-table flexitarian. +1 hashtag put a bird on it authentic. 3 wolf moon locavore Vice, normcore actually meggings leggings cornhole brunch. Four loko vinyl trust fund, Intelligentsia wolf Bushwick lo-fi sriracha. Deep v vegan forage selvage.</p>
]]></description><link>http://acyort.github.io/2016/03/138194267.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138194267.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Wed, 16 Mar 2016 14:56:55 GMT</pubDate></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>I’ve never told this to anyone. Sit yourself down and strap yourself in, you will experience some turbulence before you reach a steady altitude.</p>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nam nihil eum cum quas! Consectetur aliquam molestias quos voluptatum recusandae accusantium eaque sed architecto esse. Ut obcaecati, porro numquam sed. Odio.</p>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Esse quam provident accusamus vero autem culpa illum quo enim maiores eius error, sapiente inventore cum hic earum. Libero porro quisquam harum.</p>
<p>iceland</p>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nam nihil eum cum quas! Consectetur aliquam molestias quos voluptatum recusandae accusantium eaque sed architecto esse. Ut obcaecati, porro numquam sed. Odio.</p>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Esse quam provident accusamus vero autem culpa illum quo enim maiores eius error, sapiente inventore cum hic earum. Libero porro quisquam harum.</p>
]]></description><link>http://acyort.github.io/2016/03/138194101.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138194101.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Thu, 03 Mar 2016 14:35:43 GMT</pubDate></item></channel></rss>