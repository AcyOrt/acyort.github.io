<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[AcyOrt]]></title><description><![CDATA[A Node.js blog tool powered by GitHub.]]></description><link>http://acyort.github.io</link><generator>RSS for Node</generator><lastBuildDate>Wed, 20 Jul 2016 13:26:21 GMT</lastBuildDate><atom:link href="http://acyort.github.io/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Wed, 20 Jul 2016 13:26:21 GMT</pubDate><item><title><![CDATA[JSON 数据结构]]></title><description><![CDATA[<h3 id="post-文章内容">post 文章内容</h3><pre><code class="lang-js">{
    "categories":[
        {
            "name":"duplicate",
            "url":"/category/duplicate"
        },
        {
            "name":"help wanted",
            "url":"/category/help wanted"
        },
        {
            "name":"question",
            "url":"/category/question"
        }
    ],
    "category_name":[
        "duplicate",
        "help wanted",
        "question"
    ],
    "tags":[
        {
            "name":"c1",
            "url":"/tag/c1"
        }
    ],
    "tag_name":[
        "c1"
    ],
    "thumb":"https://cloud.githubusercontent.com/assets/2193211/8693788/5acf79b6-2b0c-11e5-9631-c1743dc43810.PNG",
    "time":{
        "M":"1",
        "MM":"01",
        "MMM":"Jan",
        "MMMM":"January",
        "D":"22",
        "Do":"22nd",
        "DD":"22",
        "ddd":"Fri",
        "dddd":"Friday",
        "YYYY":"2016"
    },
    "update":"2016-01-22T07:16:13Z",
    "summary":"",
    "body":"<span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"an-h1-header"</span>&gt;</span>An h1 header<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Paragraphs are separated by a blank line.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>2nd paragraph. <span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>Italic<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span>, <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>bold<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>, and <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>monospace<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>. Itemized lists look like:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>this one<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>that one<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>the other one<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Note that --- not considering the asterisk --- the actual text content starts at 4-columns in.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">blockquote</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Block quotes are written like so.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>They can span multiple paragraphs, if you like.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">blockquote</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it's all in chapters 12--14"). Three dots ... will be converted to an ellipsis. Unicode is supported. ☺<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"an-h2-header"</span>&gt;</span>An h2 header<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Here's a numbered list:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>first item<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>second item<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>third item<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Note again how the actual text starts at 4 columns in (4 characters from the left side). Here's a code sample:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span># <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>Let<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>me<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> re-iterate ... <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>for<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> i <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>in<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-number"</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> .. <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-number"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> { <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>do<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>-something(i) } <span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>define<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-section"</span>&gt;</span>foobar<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>() { print <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-string"</span>&gt;</span>"Welcome to flavor country!"<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>; } <span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>(which makes copying &amp; pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">code</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"lang-python"</span>&gt;</span>import <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>time<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-comment"</span>&gt;</span># Quick, count to ten!<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>for<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> i in range(<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-number"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>): <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-comment"</span>&gt;</span># (but not *too* quick)<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>time<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>.<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>sleep<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>(<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-number"</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>.<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-number"</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>) <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>print<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> i <span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"an-h3-header"</span>&gt;</span>An h3 header<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Now a nested list:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>First, get these ingredients:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>carrots<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>celery<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>lentils<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Boil some water.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Dump everything in the pot and follow this algorithm:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>find wooden spoon uncover pot stir cover pot balance wooden spoon precariously <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>on<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> pot handle wait <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-number"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> minutes <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>goto<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> first <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>step<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> (<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>or<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> shut <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>off<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> burner <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hljs-keyword"</span>&gt;</span>when<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> done) <span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Do not bump wooden spoon or it will fall.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Here's a link to <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://foo.bar"</span>&gt;</span>a website<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>, to a <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"local-doc.html"</span>&gt;</span>local doc<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>, and to a <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#an-h2-header"</span>&gt;</span>section heading in the current doc<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>. Here's a footnote [^1].<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>[^1]: Footnote text goes here.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Tables can look like this:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>size material color<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>9 leather brown 10 hemp canvas natural 11 glass transparent<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Table: Shoes, their sizes, and what they're made of<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>(The above is the caption for the table.) Pandoc also supports multi-line tables:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>keyword text<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>red Sunsets, apples, and other red or reddish things.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>green Leaves, grass, frogs and other things it's not easy being.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>A horizontal rule follows.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Here's a definition list:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>apples : Good for making applesauce. oranges : Citrus! tomatoes : There's no "e" in tomatoe.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Here's a "line block":<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>| Line one | Line too | Line tree<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>and images can be specified like so:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cloud.githubusercontent.com/assets/2193211/8693788/5acf79b6-2b0c-11e5-9631-c1743dc43810.PNG"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"example image"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"An exemplary image"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Inline math equations go in like so: $\omega = d\phi / dt$. Display math should get its own line and be put in in double-dollarsigns:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>$$I = \int \rho R^{2} dV$$<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>And note that you can backslash-escape any punctuation characters which you wish to be displayed literally, ex.: `foo`, *bar*, etc.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> ",
    "id":128098848,
    "title":"Markdown Test",
    "author":{
        "name":"LoeiFy",
        "avatar":"https://avatars.githubusercontent.com/u/2193211?v=3",
        "url":"https://github.com/LoeiFy"
    },
    "path":"/2016/01/128098848.html",
    "url":"/2016/01/128098848.html",
    "site":{
        "menu":[
            {
                "name":"home",
                "url":"/"
            },
            {
                "name":"about",
                "url":"/about"
            },
            {
                "name":"archives",
                "url":"/archives"
            },
            {
                "name":"tags",
                "url":"/tags"
            },
            {
                "name":"categories",
                "url":"/categories"
            }
        ],
        "title":"AcyOrt",
        "subtitle":"A Node.js blog tool powered by GitHub.",
        "description":"A Node.js blog tool powered by GitHub.",
        "year":2016,
        "root":"",
        "rss":"/rss.xml",
        "comment":{
            "name":"acyort",
            "url":"//acyort.disqus.com/embed.js"
        }
    }
}
</code></pre>
<h3 id="page-页面文章">page 页面文章</h3><pre><code class="lang-js">{
    <span class="hljs-attr">"categories"</span>:[

    ],
    <span class="hljs-attr">"tags"</span>:[

    ],
    <span class="hljs-attr">"thumb"</span>:<span class="hljs-string">""</span>,
    <span class="hljs-attr">"time"</span>:{
        <span class="hljs-attr">"M"</span>:<span class="hljs-string">"1"</span>,
        <span class="hljs-attr">"MM"</span>:<span class="hljs-string">"01"</span>,
        <span class="hljs-attr">"MMM"</span>:<span class="hljs-string">"Jan"</span>,
        <span class="hljs-attr">"MMMM"</span>:<span class="hljs-string">"January"</span>,
        <span class="hljs-attr">"D"</span>:<span class="hljs-string">"22"</span>,
        <span class="hljs-attr">"Do"</span>:<span class="hljs-string">"22nd"</span>,
        <span class="hljs-attr">"DD"</span>:<span class="hljs-string">"22"</span>,
        <span class="hljs-attr">"ddd"</span>:<span class="hljs-string">"Fri"</span>,
        <span class="hljs-attr">"dddd"</span>:<span class="hljs-string">"Friday"</span>,
        <span class="hljs-attr">"YYYY"</span>:<span class="hljs-string">"2016"</span>
    },
    <span class="hljs-attr">"update"</span>:<span class="hljs-string">"2016-01-26T07:04:08Z"</span>,
    <span class="hljs-attr">"summary"</span>:<span class="hljs-string">""</span>,
    <span class="hljs-attr">"body"</span>:<span class="hljs-string">"&lt;p&gt;Regulaere Ausdruecke werden verwendet, um gleichartige Muster in Zeichenketten zu erkennen.&lt;/p&gt; &lt;p&gt;Anwendungsfaelle:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Suche nach Zeichenketten anhand eines Musters&lt;/li&gt; &lt;li&gt;Pruefung, ob eine Zeichenkette einem Muster entspricht&lt;/li&gt; &lt;li&gt;Ersetzen von Vorkommen einer Zeichenkette mit einer Alternative&lt;/li&gt; &lt;/ul&gt; &lt;h2 id="</span>grep<span class="hljs-string">"&gt;GREP&lt;/h2&gt; &lt;p&gt;&lt;code&gt;grep&lt;/code&gt; ist ein Werkzeug, das Dateien oder Texte nach dem Vorkommen von Mustern durchsucht.&lt;!-- tags: a1, b1 --&gt; Es verwendet hierfuer regulaere Ausdruecke.&lt;/p&gt; &lt;h3 id="</span>syntax<span class="hljs-string">"&gt;Syntax&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;&lt;span class="</span>hljs-keyword<span class="hljs-string">"&gt;grep&lt;/span&gt; &lt;span class="</span>hljs-symbol<span class="hljs-string">"&gt;&lt;regex&gt;&lt;/span&gt; &lt;span class="</span>hljs-symbol<span class="hljs-string">"&gt;&lt;files&gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;h2 id="</span>literals<span class="hljs-string">"&gt;Literals&lt;/h2&gt; &lt;p&gt;Die einfachste Form eines regulaeren Ausdrucks ist der 'literal match'.&lt;/p&gt; &lt;p&gt;text.txt:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ausdruck Ausdruck ausdruk &lt;span class="</span>hljs-section<span class="hljs-string">"&gt;aus-druck ---&lt;/span&gt; grep ausdruck text.txt ausdruck &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Es gibt allerdings eine Reihe von Zeichen, die eine besondere Bedeutung in regulaeren Ausdruecken haben. Diese muessen fuer den Gebrauch als literal mit &lt;code&gt;\&lt;/code&gt; escaped werden.&lt;/p&gt; &lt;h2 id="</span>wildcard-<span class="hljs-string">"&gt;Wildcard &lt;code&gt;.&lt;/code&gt;&lt;/h2&gt; &lt;p&gt;Der &lt;code&gt;.&lt;/code&gt; gilt als sogenannte Wildcard, d.h. er trifft auf jedes beliebige Zeichen zu. Er matched dabei auf genau EIN Zeichen.&lt;/p&gt; &lt;p&gt;text.txt&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Test Tesst Text Texst Te5t Te&lt;span class="</span>hljs-comment<span class="hljs-string">"&gt;#t&lt;/span&gt; Tet Te t Te+t &lt;span class="</span>hljs-meta<span class="hljs-string">"&gt;---&lt;/span&gt; grep Te.t text.txt Test Text Te5t Te&lt;span class="</span>hljs-comment<span class="hljs-string">"&gt;#t&lt;/span&gt; Te t Te+t &lt;/code&gt;&lt;/pre&gt;&lt;h2 id="</span>zeichenklassen<span class="hljs-string">"&gt;Zeichenklassen&lt;/h2&gt; &lt;p&gt;In [eckigen Klammern] koennen mehrere gueltige Zeichen angegeben werden. Wie die Wildcard matched auch dieser Ausdruck nur auf ein einzelnes Zeichen.&lt;/p&gt; &lt;p&gt;text.txt&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Test Tect Tet Text Texst &lt;span class="</span>hljs-section<span class="hljs-string">"&gt;Texxt ---&lt;/span&gt; grep "</span>Te[xs]t<span class="hljs-string">" text.txt Test Text &lt;/code&gt;&lt;/pre&gt;"</span>,
    <span class="hljs-attr">"id"</span>:<span class="hljs-number">128099568</span>,
    <span class="hljs-attr">"title"</span>:<span class="hljs-string">"Regulaere Ausdruecke / Regular Expressions"</span>,
    <span class="hljs-attr">"author"</span>:{
        <span class="hljs-attr">"name"</span>:<span class="hljs-string">"author0"</span>,
        <span class="hljs-attr">"avatar"</span>:<span class="hljs-string">"https://avatars.githubusercontent.com/u/2314596?v=3"</span>,
        <span class="hljs-attr">"url"</span>:<span class="hljs-string">"https://github.com/divisoryang"</span>
    },
    <span class="hljs-attr">"path"</span>:<span class="hljs-string">"/about/index.html"</span>,
    <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/2016/01/128099568.html"</span>,
    <span class="hljs-attr">"site"</span>:{
        <span class="hljs-attr">"menu"</span>:[
            {
                <span class="hljs-attr">"name"</span>:<span class="hljs-string">"home"</span>,
                <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/"</span>
            },
            {
                <span class="hljs-attr">"name"</span>:<span class="hljs-string">"about"</span>,
                <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/about"</span>
            },
            {
                <span class="hljs-attr">"name"</span>:<span class="hljs-string">"archives"</span>,
                <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/archives"</span>
            },
            {
                <span class="hljs-attr">"name"</span>:<span class="hljs-string">"tags"</span>,
                <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/tags"</span>
            },
            {
                <span class="hljs-attr">"name"</span>:<span class="hljs-string">"categories"</span>,
                <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/categories"</span>
            }
        ],
        <span class="hljs-attr">"title"</span>:<span class="hljs-string">"AcyOrt"</span>,
        <span class="hljs-attr">"subtitle"</span>:<span class="hljs-string">"A Node.js blog tool powered by GitHub."</span>,
        <span class="hljs-attr">"description"</span>:<span class="hljs-string">"A Node.js blog tool powered by GitHub."</span>,
        <span class="hljs-attr">"year"</span>:<span class="hljs-number">2016</span>,
        <span class="hljs-attr">"root"</span>:<span class="hljs-string">""</span>,
        <span class="hljs-attr">"rss"</span>:<span class="hljs-string">"/rss.xml"</span>,
        <span class="hljs-attr">"comment"</span>:{
            <span class="hljs-attr">"name"</span>:<span class="hljs-string">"acyort"</span>,
            <span class="hljs-attr">"url"</span>:<span class="hljs-string">"//acyort.disqus.com/embed.js"</span>
        }
    }
}
</code></pre>
<h3 id="archives-归档">archives 归档</h3><p>为了显示方便，以下数据对 <code>posts</code> <code>site</code> 字段进行了清空处理</p>
<pre><code class="lang-js">{
    <span class="hljs-attr">"lists"</span>:[
        {
            <span class="hljs-attr">"year"</span>:<span class="hljs-string">"2016"</span>,
            <span class="hljs-attr">"posts"</span>:[

            ]
        },
        {
            <span class="hljs-attr">"year"</span>:<span class="hljs-string">"2015"</span>,
            <span class="hljs-attr">"posts"</span>:[

            ]
        }
    ],
    <span class="hljs-attr">"site"</span>:{

    }
}
</code></pre>
<h3 id="all-tags-所有标签">all tags 所有标签</h3><p>为了显示方便，以下数据对 <code>posts</code> <code>site</code> 字段进行了清空处理</p>
<pre><code class="lang-js">{
    <span class="hljs-attr">"lists"</span>:[
        {
            <span class="hljs-attr">"name"</span>:<span class="hljs-string">"c1"</span>,
            <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/tag/c1"</span>,
            <span class="hljs-attr">"posts"</span>:[

            ],
            <span class="hljs-attr">"number"</span>:<span class="hljs-number">3</span>
        },
        {
            <span class="hljs-attr">"name"</span>:<span class="hljs-string">"a1"</span>,
            <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/tag/a1"</span>,
            <span class="hljs-attr">"posts"</span>:[

            ],
            <span class="hljs-attr">"number"</span>:<span class="hljs-number">2</span>
        },
        {
            <span class="hljs-attr">"name"</span>:<span class="hljs-string">"b1"</span>,
            <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/tag/b1"</span>,
            <span class="hljs-attr">"posts"</span>:[

            ],
            <span class="hljs-attr">"number"</span>:<span class="hljs-number">1</span>
        }
    ],
    <span class="hljs-attr">"site"</span>:{

    }
}
</code></pre>
<h3 id="all-categories-所有分类">all categories 所有分类</h3><p>为了显示方便，以下数据对 <code>posts</code> <code>site</code> 字段进行了清空处理</p>
<pre><code class="lang-js">{
    <span class="hljs-attr">"lists"</span>:[
        {
            <span class="hljs-attr">"name"</span>:<span class="hljs-string">"duplicate"</span>,
            <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/category/duplicate"</span>,
            <span class="hljs-attr">"posts"</span>:[

            ],
            <span class="hljs-attr">"number"</span>:<span class="hljs-number">2</span>
        },
        {
            <span class="hljs-attr">"name"</span>:<span class="hljs-string">"question"</span>,
            <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/category/question"</span>,
            <span class="hljs-attr">"posts"</span>:[

            ],
            <span class="hljs-attr">"number"</span>:<span class="hljs-number">2</span>
        },
        {
            <span class="hljs-attr">"name"</span>:<span class="hljs-string">"wontfix"</span>,
            <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/category/wontfix"</span>,
            <span class="hljs-attr">"posts"</span>:[

            ],
            <span class="hljs-attr">"number"</span>:<span class="hljs-number">1</span>
        },
        {
            <span class="hljs-attr">"name"</span>:<span class="hljs-string">"help wanted"</span>,
            <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/category/help wanted"</span>,
            <span class="hljs-attr">"posts"</span>:[

            ],
            <span class="hljs-attr">"number"</span>:<span class="hljs-number">1</span>
        },
        {
            <span class="hljs-attr">"name"</span>:<span class="hljs-string">"uncategorized"</span>,
            <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/category/uncategorized"</span>,
            <span class="hljs-attr">"posts"</span>:[

            ],
            <span class="hljs-attr">"number"</span>:<span class="hljs-number">2</span>
        }
    ],
    <span class="hljs-attr">"site"</span>:{

    }
}
</code></pre>
<h2 id="post-page-文章分页相关">post page 文章分页相关</h2><p>为了显示方便，以下数据对 <code>posts</code> <code>site</code> 字段进行了清空处理</p>
<pre><code class="lang-js">{
    <span class="hljs-attr">"prev"</span>:{
        <span class="hljs-attr">"css"</span>:<span class="hljs-string">"hide"</span>,
        <span class="hljs-attr">"url"</span>:<span class="hljs-string">""</span>
    },
    <span class="hljs-attr">"next"</span>:{
        <span class="hljs-attr">"css"</span>:<span class="hljs-string">""</span>,
        <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/page/2/"</span>
    },
    <span class="hljs-attr">"name"</span>:<span class="hljs-string">""</span>,
    <span class="hljs-attr">"posts"</span>:[

    ],
    <span class="hljs-attr">"site"</span>:{

    }
}
</code></pre>
<h2 id="tag-page-单个标签分页相关">tag page 单个标签分页相关</h2><p>为了显示方便，以下数据对 <code>posts</code> <code>site</code> 字段进行了清空处理</p>
<pre><code class="lang-js">{
    <span class="hljs-attr">"prev"</span>:{
        <span class="hljs-attr">"css"</span>:<span class="hljs-string">"hide"</span>,
        <span class="hljs-attr">"url"</span>:<span class="hljs-string">""</span>
    },
    <span class="hljs-attr">"next"</span>:{
        <span class="hljs-attr">"css"</span>:<span class="hljs-string">""</span>,
        <span class="hljs-attr">"url"</span>:<span class="hljs-string">"/tag/c1/2/"</span>
    },
    <span class="hljs-attr">"name"</span>:<span class="hljs-string">"c1"</span>,
    <span class="hljs-attr">"posts"</span>:[

    ],
    <span class="hljs-attr">"site"</span>:{

    }
}
</code></pre>
<h2 id="category-page-单个分类分页相关">category page 单个分类分页相关</h2><p>为了显示方便，以下数据对 <code>posts</code> <code>site</code> 字段进行了清空处理</p>
<pre><code class="lang-js">{
    <span class="hljs-attr">"prev"</span>:{
        <span class="hljs-attr">"css"</span>:<span class="hljs-string">"hide"</span>,
        <span class="hljs-attr">"url"</span>:<span class="hljs-string">""</span>
    },
    <span class="hljs-attr">"next"</span>:{
        <span class="hljs-attr">"css"</span>:<span class="hljs-string">"hide"</span>,
        <span class="hljs-attr">"url"</span>:<span class="hljs-string">""</span>
    },
    <span class="hljs-attr">"name"</span>:<span class="hljs-string">"uncategorized"</span>,
    <span class="hljs-attr">"posts"</span>:[

    ],
    <span class="hljs-attr">"site"</span>:{

    }
}
</code></pre>
]]></description><link>http://acyort.github.io/2016/04/147367807.html</link><guid isPermaLink="true">http://acyort.github.io/2016/04/147367807.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Mon, 11 Apr 2016 09:29:10 GMT</pubDate></item><item><title><![CDATA[AcyOrt 主题模板（themes）说明]]></title><description><![CDATA[<p>AcyOrt 的模板使用的模版引擎是 <code>mustache.js</code></p>
<p><a href="https://github.com/janl/mustache.js">https://github.com/janl/mustache.js</a></p>
<p>具体的语法相关写法可以参考 <code>mustache.js</code> 项目说明 </p>
<p><a href="https://github.com/janl/mustache.js#variables">https://github.com/janl/mustache.js#variables</a></p>
<h2 id="主题文件结构">主题文件结构</h2><p>这里用默认主题 <code>ccc45</code> 作为例子</p>
<pre><code>ccc45
├
├── layout                      主题模版文件
│ 
│   └── archives<span class="hljs-selector-class">.html</span>           文章归档模板
│   └── categories<span class="hljs-selector-class">.html</span>         所有分类模板
│   └── category<span class="hljs-selector-class">.html</span>           单个分类模板
│   └── index<span class="hljs-selector-class">.html</span>              首页／文章分页模版
│   └── page<span class="hljs-selector-class">.html</span>               页面文章模版
│   └── post<span class="hljs-selector-class">.html</span>               文章模版
│   └── tag<span class="hljs-selector-class">.html</span>                单个标签模板
│   └── tags<span class="hljs-selector-class">.html</span>               所有标签模板
│ 
│   ├──  extend                 自定义模板扩展文件相关，一般是公共类似模板
│ 
│       └── <span class="hljs-selector-tag">footer</span><span class="hljs-selector-class">.html</span>         页面底部模板
│       └── head<span class="hljs-selector-class">.html</span>           页面头部信息模板                  
│       └── <span class="hljs-selector-tag">header</span><span class="hljs-selector-class">.html</span>         页面头部模板
│       └── pagination<span class="hljs-selector-class">.html</span>     分页模板
├
├── source                      网站 css，js 相关，这里的文件会被复制到 `public_dir` 目录
│ 
│   └── css                     css 相关
│   └── images                  图片相关
│   └── js                      js 相关
</code></pre><h2 id="对应生成文件如下：">对应生成文件如下：</h2><pre><code>blog
├
├── <span class="hljs-number">2016</span>                        post<span class="hljs-selector-class">.html</span> 模版生成，以 年／月 生成文件                      
├ 
├── about                       page<span class="hljs-selector-class">.html</span> 模板生成，这个代表是 about 页面
├
├── archives                    archives<span class="hljs-selector-class">.html</span> 模板生成
├
├── categories                  categories<span class="hljs-selector-class">.html</span> 模板生成      
├
├── category                    category<span class="hljs-selector-class">.html</span> 模板生成
├
├── css                         对应 source 文件夹里面的 css
├
├── js                          对应 source 文件夹里面的 js
├
├── images                      对应 source 文件夹里面的 images
├
├── page                        index<span class="hljs-selector-class">.html</span> 模板生成的文章分页
├
├── rss                         Rss
├
├── tag                         tag<span class="hljs-selector-class">.html</span> 模板生成                   
├
├── tags                        tags<span class="hljs-selector-class">.html</span> 模板生成
├
</code></pre><h2 id="模板文件扩展相关">模板文件扩展相关</h2><p>AcyOrt 在 <code>mustache.js</code> 基础上扩展了 <code>导入</code> 写法，具体是可以将一些模板公共模块提取出来，然后在相应地方引入，还支持变量导入</p>
<pre><code class="lang-html"><span class="xml"><span class="hljs-comment">&lt;!-- index.html --&gt;</span>
@import(extend/head.html, {
    "title": "</span><span class="hljs-template-variable">{{{site.title}}</span><span class="xml">}"
})

<span class="hljs-comment">&lt;!--  head.html --&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"viewport"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"google"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"notranslate"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"</span></span></span><span class="hljs-template-variable">{{{site.root}}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">}/images/icon.png"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"</span></span></span><span class="hljs-template-variable">{{{site.root}}</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">}/css/style.css"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span> @title@ <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span>
</code></pre>
<p>这里代表的意思是 <code>index.html</code> 引入 <code>extend/head.html</code> 并把 <code>extend/head.html</code> 的变量 <code>title</code> 设置成 <code>{{{site.title}}}</code></p>
]]></description><link>http://acyort.github.io/2016/04/147197393.html</link><guid isPermaLink="true">http://acyort.github.io/2016/04/147197393.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Sun, 10 Apr 2016 06:01:08 GMT</pubDate></item><item><title><![CDATA[AcyOrt 文章写作说明]]></title><description><![CDATA[<p>AcyOrt 文章写作很简单，只需要在对应项目上写相关 issues 就可以了。如果原来就有在 issues 上写博客的就更好了。
<!-- more --></p>
<!-- tags: about, 教程 -->
<h2 id="基本文章">基本文章</h2><p>简单的 issue 书写即可</p>
<ul>
<li>标题：issue 标题</li>
<li>内容：issue 内容</li>
<li>分类：issue labels</li>
</ul>
<p>标签添加方法：只需要在 issue 正文添加一个 <code>html</code> 注释即可，例如添加 <code>tag1</code> 和 <code>tag2</code> 两个标签：
<code>&lt;!-- tags: tag1, tag2 --&gt;</code></p>
<p>添加摘要方法：同样添加一个特殊 <code>html</code> 注释
<code>&lt;!-- more --&gt;</code></p>
<p><img src="https://cloud.githubusercontent.com/assets/2193211/14018425/b5fd1438-f208-11e5-9a1f-91a2262bc127.jpg" alt="intr"></p>
<h2 id="新建页面">新建页面</h2><p>新建页面也很简单，只需要在 issue 标题改称 <code>[页面地址]页面标题</code>
例如添加一个 <code>关于</code> 页面，然后路径为 <code>about</code>，标题为：<code>[about]关于</code></p>
<h2 id="图片相关">图片相关</h2><p>得益于 GitHub issues 的上传图片功能，你只要复制图片，黏贴进来即可。或者拖图片进来</p>
<h2 id="文章缩略图（thumbnail）">文章缩略图（thumbnail）</h2><p>文章封面图，即类似 wordpress 的特色图片功能。会抽取文章内容的第一张图片作为文章封面图。</p>
<h5 id="有两种缩略图模式，-可以在-codeconfigymlcode-设置">有两种缩略图模式， 可以在 <code>config.yml</code> 设置</h5><p>第一种是取第一张图，并删除文章内容上的这张图片。
第二种是取第一张图片，但不会删除图片。</p>
<p>封面图的支持需要主题支持</p>
]]></description><link>http://acyort.github.io/2016/03/143249315.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/143249315.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Sat, 09 Apr 2016 14:18:41 GMT</pubDate></item><item><title><![CDATA[AcyOrt 介绍与安装]]></title><description><![CDATA[<p>AcyOrt 是一个基于 Node.js 的博客工具。通过 GitHub API 获取 GitHub issues 的相关内容生成静态页面，从而生成一个博客。用户只要在 issues 上写自己的博客文章，然后一个简单命令就可以发布自己的博客了。包括自定义自己域名。
<!-- more --></p>
<h2 id="支持功能">支持/功能</h2><ul>
<li>文章</li>
<li>评论</li>
<li>归档</li>
<li>Rss</li>
<li>页面 </li>
<li>标签 </li>
<li>分类</li>
<li>主题</li>
<li>菜单</li>
<li>封面图</li>
</ul>
<h2 id="安装">安装</h2><p>安装 AcyOrt 之前确保已经安装 <code>Node.js</code> 以及一个 <code>GitHub</code> 账号</p>
<p>接下来只需要通过 <code>npm</code> 安装 AcyOrt</p>
<pre><code class="lang-bash">$ npm <span class="hljs-keyword">install</span> acyort -g
</code></pre>
<h2 id="创建网站">创建网站</h2><p>安装 AcyOrt 完成后，执行下列命令，将会在指定文件夹中创建网站</p>
<pre><code class="lang-bash">$ acyort <span class="hljs-built_in">create</span> &lt;<span class="hljs-built_in">folder</span>&gt;
$ cd &lt;<span class="hljs-built_in">folder</span>&gt;
</code></pre>
<h3 id="configyml">config.yml</h3><p>网站的配置信息</p>
<pre><code class="lang-yml"><span class="hljs-comment"># 网站标题，二级标题，描述，RSS</span>
<span class="hljs-attr">title:</span> AcyOrt
<span class="hljs-attr">subtitle:</span> A Node.js blog tool powered by GitHub.
<span class="hljs-attr">description:</span> A Node.js blog tool powered by GitHub. 
<span class="hljs-attr">rss:</span> rss.xml

<span class="hljs-comment"># 网站 url， 如有需要你可以设置子目录访问，类似 'http://yoursite.com/child' </span>
<span class="hljs-comment"># 请添加 'http://' 或者 'https://'</span>
<span class="hljs-attr">url:</span> http://yoursite.com

<span class="hljs-comment"># 主题设置</span>
<span class="hljs-attr">theme:</span> ccc45

<span class="hljs-comment"># 分页</span>
<span class="hljs-attr">per_page:</span> <span class="hljs-number">4</span>

<span class="hljs-comment"># 菜单</span>
<span class="hljs-attr">menu:</span>
<span class="hljs-attr">  - name:</span> home
<span class="hljs-attr">    url:</span> /
<span class="hljs-attr">  - name:</span> about
<span class="hljs-attr">    url:</span> /about
<span class="hljs-attr">  - name:</span> archives
<span class="hljs-attr">    url:</span> /archives
<span class="hljs-attr">  - name:</span> tags
<span class="hljs-attr">    url:</span> /tags
<span class="hljs-attr">  - name:</span> categories
<span class="hljs-attr">    url:</span> /categories

<span class="hljs-comment"># 默认分类</span>
<span class="hljs-attr">default_category:</span> uncategorized

<span class="hljs-comment"># 生成 html 输出目录，默认当前目录，可以设置子目录，例如 'child'</span>
<span class="hljs-attr">public_dir:</span> /

<span class="hljs-comment"># 缩略图模式</span>
<span class="hljs-comment"># 1: 取第一张图片，并删除原文中的这张图片</span>
<span class="hljs-comment"># 2: 取第一张图片，但不删除原文这张图片</span>
<span class="hljs-attr">thumbnail_mode:</span> <span class="hljs-number">2</span>

<span class="hljs-comment"># 评论设置，多说 或者 disqus</span>
<span class="hljs-attr">duoshuo:</span>
<span class="hljs-attr">disqus:</span> acyort

<span class="hljs-comment"># 作者过滤，指定读取以下作者的 issues，防止他人在 issues 上写无关内容</span>
<span class="hljs-attr">authors:</span>
<span class="hljs-bullet">    -</span> LoeiFy
<span class="hljs-bullet">    -</span> author0
<span class="hljs-bullet">    -</span> author1

<span class="hljs-comment"># 网站内容来源 repo</span>
<span class="hljs-comment"># 用户名/项目地址</span>
<span class="hljs-attr">issue_repo:</span> AcyOrt/acyort.github.io

<span class="hljs-comment"># GitHub access token(Optional)</span>
<span class="hljs-comment"># token should be separated by whitespace if you push this file to GitHub </span>

<span class="hljs-comment"># token: sd46a6d65a asd8sdbn</span>
</code></pre>
<h3 id="themes">themes</h3><p>主题文件夹，可以自定义主题，默认主题是：<code>ccc45</code></p>
<h2 id="生成网站">生成网站</h2><p>通过一个简单命令即可生成网站</p>
<pre><code class="lang-bash"><span class="hljs-variable">$ </span>acyort build
</code></pre>
<p>查看你在 <code>config.yml</code> 设置的 <code>public_dir</code> 可以看到相关网站文件，你可以通过 <code>git</code> 方式提交网站到 <code>GitHub</code> 或者直接将里面文件发布到其他地方</p>
<p>注：在运行 <code>acyort create &lt;folder&gt;</code> 生成网站基本文件时候，会生成一个 <code>.gitignore</code> 文件，会把 <code>themes</code> 目录从 git 中排除，如有需要，可以修改 <code>.gitignore</code> 文件去掉这个排除</p>
<h2 id="本地测试">本地测试</h2><p>AcyOrt 提供本地测试，只需运行</p>
<pre><code class="lang-bash">$ acyort <span class="hljs-keyword">server</span>
</code></pre>
<p>这时候访问 <code>http://127.0.0.1:2222</code> 就能够看到网站</p>
<!-- tags: about, 教程 -->]]></description><link>http://acyort.github.io/2016/03/143240507.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/143240507.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Sat, 09 Apr 2016 14:34:50 GMT</pubDate></item><item><title><![CDATA[Markdown Test ]]></title><description><![CDATA[<h1 id="an-h1-header">An h1 header</h1><p>Paragraphs are separated by a blank line.</p>
<p>2nd paragraph. <em>Italic</em>, <strong>bold</strong>, and <code>monospace</code>. Itemized lists
look like:</p>
<ul>
<li>this one</li>
<li>that one</li>
<li>the other one</li>
</ul>
<p>Note that --- not considering the asterisk --- the actual text
content starts at 4-columns in.</p>
<blockquote>
<p>Block quotes are
written like so.</p>
<p>They can span multiple paragraphs,
if you like.</p>
</blockquote>
<p>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., &quot;it&#39;s all
in chapters 12--14&quot;). Three dots ... will be converted to an ellipsis.
Unicode is supported. ☺</p>
<h2 id="an-h2-header">An h2 header</h2><p>Here&#39;s a numbered list:</p>
<ol>
<li>first item</li>
<li>second item</li>
<li>third item</li>
</ol>
<p>Note again how the actual text starts at 4 columns in (4 characters
from the left side). Here&#39;s a code sample:</p>
<pre><code># <span class="hljs-keyword">Let</span> <span class="hljs-keyword">me</span> re-iterate ...
<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span> .. <span class="hljs-number">10</span> { <span class="hljs-keyword">do</span>-something(i) }
</code></pre><p>As you probably guessed, indented 4 spaces. By the way, instead of
indenting the block, you can use delimited blocks, if you like:</p>
<pre><code><span class="hljs-keyword">define</span> <span class="hljs-section">foobar</span>() {
    print <span class="hljs-string">"Welcome to flavor country!"</span>;
}
</code></pre><p>(which makes copying &amp; pasting easier). You can optionally mark the
delimited block for Pandoc to syntax highlight it:</p>
<pre><code class="lang-python">import <span class="hljs-built_in">time</span>
<span class="hljs-comment"># Quick, count to ten!</span>
<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">10</span>):
    <span class="hljs-comment"># (but not *too* quick)</span>
    <span class="hljs-built_in">time</span>.sleep(<span class="hljs-number">0.5</span>)
    print i
</code></pre>
<h3 id="an-h3-header">An h3 header</h3><p>Now a nested list:</p>
<ol>
<li><p>First, get these ingredients:</p>
<ul>
<li>carrots</li>
<li>celery</li>
<li>lentils</li>
</ul>
</li>
<li><p>Boil some water.</p>
</li>
<li><p>Dump everything in the pot and follow
this algorithm:</p>
<pre><code>find wooden spoon
uncover pot
stir
cover pot
balance wooden spoon precariously <span class="hljs-keyword">on</span> pot handle
wait <span class="hljs-number">10</span> minutes
<span class="hljs-keyword">goto</span> first <span class="hljs-keyword">step</span> (<span class="hljs-keyword">or</span> shut <span class="hljs-keyword">off</span> burner <span class="hljs-keyword">when</span> done)
</code></pre><p>Do not bump wooden spoon or it will fall.</p>
</li>
</ol>
<p>Notice again how text always lines up on 4-space indents (including
that last line which continues item 3 above).</p>
<p>Here&#39;s a link to <a href="http://foo.bar">a website</a>, to a <a href="local-doc.html">local
doc</a>, and to a <a href="#an-h2-header">section heading in the current
doc</a>. Here&#39;s a footnote [^1].</p>
<p>[^1]: Footnote text goes here.</p>
<p>Tables can look like this:</p>
<p>size  material      color</p>
<hr>
<p>9     leather       brown
10    hemp canvas   natural
11    glass         transparent</p>
<p>Table: Shoes, their sizes, and what they&#39;re made of</p>
<p>(The above is the caption for the table.) Pandoc also supports
multi-line tables:</p>
<hr>
<p>keyword   text</p>
<hr>
<p>red       Sunsets, apples, and
          other red or reddish
          things.</p>
<p>green     Leaves, grass, frogs
          and other things it&#39;s
          not easy being.</p>
<hr>
<p>A horizontal rule follows.</p>
<hr>
<p>Here&#39;s a definition list:</p>
<p>apples
  : Good for making applesauce.
oranges
  : Citrus!
tomatoes
  : There&#39;s no &quot;e&quot; in tomatoe.</p>
<p>Again, text is indented 4 spaces. (Put a blank line between each
term/definition pair to spread things out more.)</p>
<p>Here&#39;s a &quot;line block&quot;:</p>
<p>| Line one
|   Line too
| Line tree</p>
<p>and images can be specified like so:</p>
<p><img src="https://cloud.githubusercontent.com/assets/2193211/8693788/5acf79b6-2b0c-11e5-9631-c1743dc43810.PNG" alt="example image" title="An exemplary image"></p>
<p>Inline math equations go in like so: $\omega = d\phi / dt$. Display
math should get its own line and be put in in double-dollarsigns:</p>
<p>$$I = \int \rho R^{2} dV$$</p>
<p>And note that you can backslash-escape any punctuation characters
which you wish to be displayed literally, ex.: `foo`, *bar*, etc.</p>
<!-- tags: fixed, a1, a4 -->]]></description><link>http://acyort.github.io/2016/03/138196161.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138196161.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Wed, 16 Mar 2016 14:56:28 GMT</pubDate></item><item><title><![CDATA[View More Test]]></title><description><![CDATA[<p>In my previous post many were telling me I was missing the point about task runners - they&#39;re for wiring up complex sets of tasks, not just running odd tasks. So I thought I&#39;d wrap up this piece with a complex set of tasks typical of a multi-hundred-line Gruntfile. For this example I want to do the following:</p>
<!-- more -->
<pre><code class="lang-js">  <span class="hljs-string">"scripts"</span>: {
    <span class="hljs-string">"clean"</span>: <span class="hljs-string">"rimraf dist/*"</span>,

    <span class="hljs-string">"prebuild"</span>: <span class="hljs-string">"npm run clean -s"</span>,
    <span class="hljs-string">"build"</span>: <span class="hljs-string">"npm run build:scripts -s &amp;&amp; npm run build:styles -s &amp;&amp; npm run build:markup -s"</span>,
    <span class="hljs-string">"build:scripts"</span>: <span class="hljs-string">"browserify -d assets/scripts/main.js -p [minifyify --compressPath . --map main.js.map --output dist/main.js.map] | hashmark -n dist/main.js -s -l 8 -m assets.json '</span>dist/{name}{hash}{ext}<span class="hljs-string">'"</span>,
    <span class="hljs-string">"build:styles"</span>: <span class="hljs-string">"stylus assets/styles/main.styl -m -o dist/ &amp;&amp; hashmark -s -l 8 -m assets.json dist/main.css '</span>dist/{name}{hash}{ext}<span class="hljs-string">'"</span>,
    <span class="hljs-string">"build:markup"</span>: <span class="hljs-string">"jade assets/markup/index.jade --obj assets.json -o dist"</span>,

    <span class="hljs-string">"test"</span>: <span class="hljs-string">"karma start --singleRun"</span>,

    <span class="hljs-string">"watch"</span>: <span class="hljs-string">"parallelshell '</span>npm run watch:test -s' <span class="hljs-string">'npm run watch:build -s'</span><span class="hljs-string">",
    "</span>watch:test<span class="hljs-string">": "</span>karma start<span class="hljs-string">",
    "</span>watch:build<span class="hljs-string">": "</span>nodemon -q -w assets/ --ext <span class="hljs-string">'.'</span> --<span class="hljs-built_in">exec</span> <span class="hljs-string">'npm run build'</span><span class="hljs-string">",

    "</span>open:<span class="hljs-built_in">prod</span><span class="hljs-string">": "</span>opener http:<span class="hljs-comment">//example.com",</span>
    <span class="hljs-string">"open:stage"</span>: <span class="hljs-string">"opener http://staging.example.internal"</span>,
    <span class="hljs-string">"open:dev"</span>: <span class="hljs-string">"opener http://localhost:9090"</span>,

    <span class="hljs-string">"deploy:prod"</span>: <span class="hljs-string">"s3-cli sync ./dist/ s3://example-com/prod-site/"</span>,
    <span class="hljs-string">"deploy:stage"</span>: <span class="hljs-string">"s3-cli sync ./dist/ s3://example-com/stage-site/"</span>,

    <span class="hljs-string">"serve"</span>: <span class="hljs-string">"http-server -p 9090 dist/"</span>,
    <span class="hljs-string">"live-reload"</span>: <span class="hljs-string">"live-reload --port 9091 dist/"</span>,

    <span class="hljs-string">"dev"</span>: <span class="hljs-string">"npm run open:dev -s &amp; parallelshell '</span>npm run live-reload -s' <span class="hljs-string">'npm run serve -s'</span> <span class="hljs-string">'npm run watch -s'</span><span class="hljs-string">"
  }</span>
</code></pre>
]]></description><link>http://acyort.github.io/2016/03/138195947.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138195947.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Thu, 03 Mar 2016 14:39:53 GMT</pubDate></item><item><title><![CDATA[test heading]]></title><description><![CDATA[<h1 id="an-exhibit-of-markdown">An exhibit of Markdown</h1><p>This note demonstrates some of what <a href="http://daringfireball.net/projects/markdown/">Markdown</a> is capable of doing.</p>
<p><em>Note: Feel free to play with this page. Unlike regular notes, this doesn&#39;t automatically save itself.</em></p>
<h2 id="basic-formatting">Basic formatting</h2><p>Paragraphs can be written like so. A paragraph is the basic block of Markdown. A paragraph is what text will turn into when there is no reason it should become anything else.</p>
<p>Paragraphs must be separated by a blank line. Basic formatting of <em>italics</em> and <strong>bold</strong> is supported. This <em>can be <strong>nested</strong> like</em> so.</p>
<h2 id="lists">Lists</h2><h3 id="ordered-list">Ordered list</h3><ol>
<li>Item 1</li>
<li>A second item</li>
<li>Number 3</li>
<li>Ⅳ</li>
</ol>
<p><em>Note: the fourth item uses the Unicode character for <a href="http://www.fileformat.info/info/unicode/char/2163/index.htm">Roman numeral four</a>.</em></p>
<h3 id="unordered-list">Unordered list</h3><ul>
<li>An item</li>
<li>Another item</li>
<li>Yet another item</li>
<li>And there&#39;s more...</li>
</ul>
<h2 id="paragraph-modifiers">Paragraph modifiers</h2><h3 id="code-block">Code block</h3><pre><code>Code blocks are very useful <span class="hljs-keyword">for</span> developers <span class="hljs-keyword">and</span> other people who look <span class="hljs-keyword">at</span> code <span class="hljs-keyword">or</span> other things <span class="hljs-keyword">that</span> are written <span class="hljs-keyword">in</span> plain <span class="hljs-built_in">text</span>. As you can see, <span class="hljs-keyword">it</span> uses a fixed-width font.
</code></pre><p>You can also make <code>inline code</code> to add code into other things.</p>
<h3 id="quote">Quote</h3><blockquote>
<p>Here is a quote. What this is should be self explanatory. Quotes are automatically indented when they are used.</p>
</blockquote>
<h2 id="headings">Headings</h2><p>There are six levels of headings. They correspond with the six levels of HTML headings. You&#39;ve probably noticed them already in the page. Each level down uses one more hash character.</p>
<h3 id="headings-emcanem-also-contain-strongformattingstrong">Headings <em>can</em> also contain <strong>formatting</strong></h3><h3 id="they-can-even-contain-codeinline-codecode">They can even contain <code>inline code</code></h3><p>Of course, demonstrating what headings look like messes up the structure of the page.</p>
<p>I don&#39;t recommend using more than three or four levels of headings here, because, when you&#39;re smallest heading isn&#39;t too small, and you&#39;re largest heading isn&#39;t too big, and you want each size up to look noticeably larger and more important, there there are only so many sizes that you can use.</p>
<h2 id="urls">URLs</h2><p>URLs can be made in a handful of ways:</p>
<ul>
<li>A named link to <a href="http://www.markitdown.net/">MarkItDown</a>. The easiest way to do these is to select what you want to make a link and hit <code>Ctrl+L</code>.</li>
<li>Another named link to <a href="http://www.markitdown.net/">MarkItDown</a></li>
<li>Sometimes you just want a URL like <a href="http://www.markitdown.net/">http://www.markitdown.net/</a>.</li>
</ul>
<h2 id="horizontal-rule">Horizontal rule</h2><p>A horizontal rule is a line that goes across the middle of the page.</p>
<hr>
<p>It&#39;s sometimes handy for breaking things up.</p>
<h2 id="images">Images</h2><p>Markdown can also contain images. I&#39;ll need to add something here sometime.</p>
<h2 id="finally">Finally</h2><p>There&#39;s actually a lot more to Markdown than this. See the official <a href="http://daringfireball.net/projects/markdown/basics">introduction</a> and <a href="http://daringfireball.net/projects/markdown/syntax">syntax</a> for more information. However, be aware that this is not using the official implementation, and this might work subtly differently in some of the little things.</p>
]]></description><link>http://acyort.github.io/2016/03/138195195.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138195195.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Mon, 09 May 2016 12:38:43 GMT</pubDate></item><item><title><![CDATA[Markdown Cheatsheet]]></title><description><![CDATA[<p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.</p>
<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>
<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>
<p>Strikethrough uses two tildes. <del>Scratch this.</del></p>
<ol>
<li>First ordered list item</li>
<li>Another item
⋅⋅* Unordered sub-list. </li>
<li>Actual numbers don&#39;t matter, just that it&#39;s a number
⋅⋅1. Ordered sub-list</li>
<li>And another item.</li>
</ol>
<p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we&#39;ll use three here to also align the raw Markdown).</p>
<p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅
⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅
⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>
<ul>
<li>Unordered list can use asterisks</li>
</ul>
<ul>
<li>Or minuses</li>
</ul>
<ul>
<li>Or pluses</li>
</ul>
<p><a href="https://www.google.com">I&#39;m an inline-style link</a></p>
<p><a href="https://www.google.com" title="Google&#39;s Homepage">I&#39;m an inline-style link with title</a></p>
<p>[I&#39;m a reference-style link][Arbitrary case-insensitive reference text]</p>
<p><a href="../blob/master/LICENSE">I&#39;m a relative reference to a repository file</a></p>
<p>Here&#39;s our logo (hover to see the title text):</p>
<p>Inline-style: 
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"></p>
<p>Reference-style: 
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2"></p>
<pre><code class="lang-javascript">var s = <span class="hljs-string">"JavaScript syntax highlighting"</span><span class="hljs-comment">;</span>
alert(<span class="hljs-name">s</span>)<span class="hljs-comment">;</span>
</code></pre>
<pre><code class="lang-python">s = <span class="hljs-string">"Python syntax highlighting"</span>
<span class="hljs-keyword">print</span> <span class="hljs-built_in">s</span>
</code></pre>
<pre><code><span class="hljs-keyword">No</span> language indicated, <span class="hljs-keyword">so</span> <span class="hljs-keyword">no</span> <span class="hljs-keyword">syntax</span> highlighting. 
But let's throw <span class="hljs-keyword">in</span> a &lt;b&gt;tag&lt;/b&gt;.
</code></pre>]]></description><link>http://acyort.github.io/2016/03/138194595.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138194595.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Wed, 16 Mar 2016 14:59:01 GMT</pubDate></item><item><title><![CDATA[CSS with Superpowers]]></title><description><![CDATA[<p>Sass is completely compatible with all versions of CSS. We take this compatibility seriously, so that you can seamlessly use any available CSS libraries.</p>
<!-- more -->
<p>Sass boasts more features and abilities than any other CSS extension language out there. The Sass Core Team has worked endlessly to not only keep up, but stay ahead.</p>
<p>Mature
Sass has been actively supported for about 8 years by its loving Core</p>
<p>Team
Over and over again, the industry is choosing Sass as the premier CSS extension language.</p>
<p>Large Community
Sass is actively supported and developed by a consortium of several tech companies and hundreds of developers.</p>
<p>Frameworks
There are endless number of frameworks built with Sass. Compass, Bourbon, and Susy just to name a few.</p>
<p>Dreamcatcher cold-pressed American Apparel, post-ironic Carles Shoreditch craft beer Banksy PBR retro distillery before they sold out freegan asymmetrical kogi. Food truck Schlitz direct trade, deep v ethical yr sriracha mumblecore freegan. Tattooed occupy pork belly, letterpress typewriter cold-pressed viral swag farm-to-table flexitarian. +1 hashtag put a bird on it authentic. 3 wolf moon locavore Vice, normcore actually meggings leggings cornhole brunch. Four loko vinyl trust fund, Intelligentsia wolf Bushwick lo-fi sriracha. Deep v vegan forage selvage.</p>
<!-- tags: fixed, why, hehe -->]]></description><link>http://acyort.github.io/2016/03/138194267.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138194267.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Wed, 16 Mar 2016 14:56:55 GMT</pubDate></item><item><title><![CDATA[A Great Story Never Told]]></title><description><![CDATA[<p>I’ve never told this to anyone. Sit yourself down and strap yourself in, you will experience some turbulence before you reach a steady altitude.</p>
<!-- more -->
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nam nihil eum cum quas! Consectetur aliquam molestias quos voluptatum recusandae accusantium eaque sed architecto esse. Ut obcaecati, porro numquam sed. Odio.</p>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Esse quam provident accusamus vero autem culpa illum quo enim maiores eius error, sapiente inventore cum hic earum. Libero porro quisquam harum.</p>
<p>iceland</p>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nam nihil eum cum quas! Consectetur aliquam molestias quos voluptatum recusandae accusantium eaque sed architecto esse. Ut obcaecati, porro numquam sed. Odio.</p>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Esse quam provident accusamus vero autem culpa illum quo enim maiores eius error, sapiente inventore cum hic earum. Libero porro quisquam harum.</p>
]]></description><link>http://acyort.github.io/2016/03/138194101.html</link><guid isPermaLink="true">http://acyort.github.io/2016/03/138194101.html</guid><dc:creator><![CDATA[LoeiFy]]></dc:creator><pubDate>Thu, 03 Mar 2016 14:35:43 GMT</pubDate></item></channel></rss>